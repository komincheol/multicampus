
▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒
▒                                              ▒
▒ BACKUP AND RECOVERY (User-managed)           ▒
▒                                              ▒
▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒

 ------------------------
 > Failure 유형 및 HAA  <
 ------------------------
 
    o Statement failure    : DBA 
    o User process failure : PMON
    o Network failure      : Network 관리자
    o User error           : DBA
    o Instance failure     : SMON
    o Media failure        : DBA

  - HAA : 다운타임의 원인과 해결책들

    o http://gseducation.blog.me/20104367973

 ----------------------
 > Database 수동 생성 <
 ----------------------

  0.디렉토리 및 파라미터 파일 생성

  OS] rm -rf $ORACLE_BASE/oradata/brdb
  OS] mkdir $ORACLE_BASE/oradata/brdb
  OS] ls $ORACLE_BASE/oradata

        brdb  orcl

  OS] vi $ORACLE_HOME/dbs/initbrdb.ora

	db_name       = brdb
	instance_name = brdb
	compatible    = 11.2.0
	processes     = 100
	
	undo_management = auto
	undo_tablespace = undotbs01

	db_cache_size    = 64m
	shared_pool_size = 72m
	db_block_size    = 4096

	control_files = ('$ORACLE_BASE/oradata/brdb/control01.ctl',
	                 '$ORACLE_BASE/oradata/brdb/control02.ctl')

	remote_login_passwordfile = exclusive

  1.Software 시작
 
   OS] vi $ORACLE_HOME/sqlplus/admin/glogin.sql

	define _editor=vi  --> 마지막줄에 추가해 주세요.

   OS] export ORACLE_SID=brdb
   OS] sqlplus / as sysdba
   SQL> startup nomount
   SQL> select instance_name, status from v$instance;

     INSTANCE_NAME                    STATUS
     -------------------------------- ------------------------
     brdb                             STARTED

  2.Create database 명령 실행 

   SQL> create database brdb
	logfile group 1 ('$ORACLE_BASE/oradata/brdb/redo01_a.log', 
        	         '$ORACLE_BASE/oradata/brdb/redo01_b.log') size 20m,
	        group 2 ('$ORACLE_BASE/oradata/brdb/redo02_a.log', 
	                 '$ORACLE_BASE/oradata/brdb/redo02_b.log') size 20m
	datafile '$ORACLE_BASE/oradata/brdb/system01.dbf' size 200m autoextend on next 20m maxsize unlimited 
	sysaux datafile '$ORACLE_BASE/oradata/brdb/sysaux01.dbf' size 200m autoextend on next 20m maxsize unlimited 
	undo tablespace undotbs01 datafile '$ORACLE_BASE/oradata/brdb/undotbs01.dbf' size 100m autoextend on next 20m maxsize 2G 
	default temporary tablespace temp tempfile '$ORACLE_BASE/oradata/brdb/temp01.tmp' size 20m autoextend on next 20m maxsize 2G;

	cf.다음 파일의 내용을 확인해 보세요.

	   vi $ORACLE_HOME/rdbms/admin/sql.bsq

   SQL> select instance_name, status from v$instance;

     INSTANCE_NAME                    STATUS
     -------------------------------- ------------------------
     brdb                             OPEN

  3.필수 Script 수행

   SQL> alter user sys identified by oracle;        -- change_on_install
   SQL> alter user system identified by oracle;     -- manager
   SQL> ed after_db_create.sql

	conn sys/oracle as sysdba
	@?/rdbms/admin/catalog.sql
	@?/rdbms/admin/catproc.sql

	conn system/oracle
	@?/sqlplus/admin/pupbld.sql

   SQL> @ after_db_create.sql
   SQL> exit

  [oracle@ora11gr2 ~]$ orapwd file=/u01/app/oracle/product/11.2.0/dbhome_1/dbs/orapwbrdb password=saturday entries=5

  # Test

   [oracle@ora11gr2 ~]$ ps -ef|grep smon

	oracle   24145     1  0 18:06 ?        00:00:00 ora_smon_brdb
	oracle   22122     1  0 17:52 ?        00:00:00 ora_smon_orcl

   [oracle@ora11gr2 ~]$ vi /etc/oratab

	orcl:/u01/app/oracle/product/11.2.0/dbhome_1:N
	brdb:/u01/app/oracle/product/11.2.0/dbhome_1:N

 ----------------------
 > Database mode 수정 <
 ----------------------

  [oracle@ora11gr2 ~]$ export NLS_LANG=american_america.us7ascii
  [oracle@ora11gr2 ~]$ export ORACLE_SID=brdb
  [oracle@ora11gr2 ~]$ sqlplus / as sysdba
  SQL> create spfile from pfile;
  SQL> startup force
  SQL> show parameter spfile

	NAME                                 TYPE                   VALUE
	------------------------------------ ---------------------- ------------------------------
	spfile                               string                 /u01/app/oracle/product/11.2.0

  SQL> archive log list

	Database log mode              No Archive Mode
	Automatic archival             Disabled
	Archive destination            /u01/app/oracle/product/11.2.0/dbhome_1/dbs/arch
	Oldest online log sequence     47
	Current log sequence           50

  SQL> show parameter log_archive_format  --> default 값 유지하세요.
  SQL> show parameter log_archive_dest    --> 2군데를 아래처럼 설정하세요.

  SQL> !mkdir /u01/app/oracle/oradata/brdb_arch1
  SQL> !mkdir /u01/app/oracle/oradata/brdb_arch2

  SQL> alter system set log_archive_dest_1 = 'location=/u01/app/oracle/oradata/brdb_arch1/';
  SQL> alter system set log_archive_dest_2 = 'location=/u01/app/oracle/oradata/brdb_arch2/'; 

  SQL> shutdown immediate
  SQL> startup mount
  SQL> alter database archivelog;

  SQL> archive log list

	데이터베이스 로그 모드        아카이브 모드   --> Mode
	자동 아카이브                 사용            --> arcN 프로세스 자동 시작
	아카이브 대상                 /u01/app/oracle/oradata/brdb_arch2/
	가장 오래된 온라인 로그 순서  47
	아카이브할 다음 로그          50
	현재 로그 순서                50

  SQL> alter database open;
  SQL> !ps -ef|grep brdb

	oracle   31761     1  0 15:02 ?        00:00:00 ora_arc0_brdb
	oracle   31763     1  0 15:02 ?        00:00:00 ora_arc1_brdb
	oracle   31765     1  0 15:02 ?        00:00:00 ora_arc2_brdb

  SQL> !ls -lR /u01/app/oracle/oradata/brdb_arch*

  SQL> alter system switch logfile;
  SQL> alter system switch logfile;
  SQL> alter system switch logfile;

  SQL> !ls -lR /u01/app/oracle/oradata/brdb_arch*

 -------------------------
 > Whole Database Backup <
 -------------------------

 - offline (closed, cold, consistent) 백업

  SQL> !rm -rf /u01/app/oracle/oradata/dontouch
  SQL> !mkdir /u01/app/oracle/oradata/dontouch
  SQL> shutdown immediate

  SQL> !cp -R /u01/app/oracle/oradata/brdb/* /u01/app/oracle/oradata/dontouch
  SQL> !ls -lR /u01/app/oracle/oradata/dontouch
  SQL> exit

 - online (open, hot, inconsistent) 백업
  
  [oracle@ora11gr2 ~]$ sqlplus / as sysdba
  SQL> startup 
  SQL> !mkdir /u01/app/oracle/oradata/openbackup

  SQL> alter database backup controlfile to trace as '/u01/app/oracle/oradata/openbackup/control_20120218.sql';
  SQL> !vi /u01/app/oracle/oradata/openbackup/control_20120218.sql

  SQL> set pages 100
  SQL> set linesize 300

  SQL> select 'alter tablespace '||tablespace_name||' begin backup;'||chr(10)||
              '!cp '||file_name||' /u01/app/oracle/oradata/openbackup'||chr(10)||
              'alter tablespace '||tablespace_name||' end backup;' as commands
       from dba_data_files;

  SQL> 질의 결과를 복사해서 실행하세요.
  SQL> exit

 -----------------
 > Recovery Case <
 -----------------

 - complete recovery -

 [0] parameter file 손상 1 : 파일이 삭제된 상황                            --> 재생성(alert 파일을 활용할 경우 편리하다.)
 [0] parameter file 손상 2 : spfile에 오타 입력된 상황                     --> pfile 생성 ▷ pfile 편집 ▷ spfile 재생성
 [0] password file 손상                                                    --> 재생성

 [1] control file 1개 손상                                                 --> 복사, 붙여넣기 
 [2] control file 몽땅 손상                                                --> create controlfile 명령 수행
 [3] redo log file 멤버 1개 손상                                           --> 복사, 붙여넣기
 [4] redo log file 그룹 손상 : Inactive                                    --> 삭제 or 복사, 붙여넣기 or Clear logfile
 [5] datafile 손상 : temporary       Tablespace의 datafile                 --> restartup 또는 "추가 뒤 삭제"
 [6] datafile 손상 : 일반            Tablespace의 datafile                 --> open   recover(open에서)
 [7] datafile 손상 : 시스템(및 Undo) Tablespace의 datafile                 --> closed recover(mount에서)
 [8] datafile 손상 : 백업하지 않은 datafile                                --> create datafile + redo
 [9] datafile 손상 : 디스크 손상으로 인해 datafile을 다른 위치로 restore   --> rename file + redo

 - incomplete recovery -

 [10] table drop purge : flashback으로 복구 불가능한 경우                  --> time-based   불완전 복구

 - Clone Database - 

 [11] Database의 백업 datafile을 이용해서 복제 DB 생성하기  

 - Clone Database를 이용한 불완전 복구 - 

 [12] Clone Database를 이용한 복구 (user-managed 방식)      

 - incomplete recovery -

 [13] current(또는 active) group 손상                                      --> cancel-based 불완전 복구

-----------------------------------------------------------
 [0] parameter file 손상 1 : 파일이 삭제된 상황
-----------------------------------------------------------

  [oracle@ora11gr2 ~]$ ls -l $ORACLE_HOME/dbs/*brdb.ora
  [oracle@ora11gr2 ~]$ rm $ORACLE_HOME/dbs/*brdb.ora

  [oracle@ora11gr2 ~]$ export ORACLE_SID=brdb
  [oracle@ora11gr2 ~]$ sqlplus / as sysdba
  SQL> startup force

	ORA-01078: failure in processing system parameters
	LRM-00109: '/u01/app/oracle/product/11.2.0/dbhome_1/dbs/initbrdb.ora'

  SQL> exit
 
  [oracle@ora11gr2 ~]$ cd /u01/app/oracle/diag/rdbms/brdb/brdb/trace
  [oracle@ora11gr2 log]$ vi + alert_brdb.log

     --> 이 파일을 거슬러 올라가다 처음 발견되는 파라미터의 모음을 이용해서 아래와 같이 파일을 새로 만드세요.

  [oracle@ora11gr2 log]$ vi /u01/app/oracle/product/11.2.0/dbhome_1/dbs/initbrdb.ora

	processes                = 100
	shared_pool_size         = 75497472
	control_files            = /u01/app/oracle/oradata/brdb/control01.ctl, /u01/app/oracle/oradata/brdb/control02.ctl
	db_block_size            = 4096
	db_cache_size            = 67108864
	compatible               = 11.2.0
	log_archive_dest_1       = 'location=/u01/app/oracle/oradata/brdb_arch1/'
	log_archive_dest_2       = 'location=/u01/app/oracle/oradata/brdb_arch2/'
	undo_management          = AUTO
	undo_tablespace          = UNDOTBS01
	remote_login_passwordfile= EXCLUSIVE
	instance_name            = brdb
	db_name                  = brdb

  [oracle@ora11gr2 log]$ cd
  [oracle@ora11gr2 ~]$ sqlplus / as sysdba
  SQL> startup
  SQL> create spfile from pfile;

  SQL> startup force
  SQL> show parameter spfile

	NAME                                 TYPE                   VALUE
	------------------------------------ ---------------------- ----------------------------------------------------------
	spfile                               string                 /u01/app/oracle/product/11.2.0/dbhome_1/dbs/spfilebrdb.ora

-----------------------------------------------------------
 [0] parameter file 손상 2 : spfile에 오타 입력된 상황
-----------------------------------------------------------

  [oracle@ora11gr2 ~]$ export ORACLE_SID=brdb
  [oracle@ora11gr2 ~]$ sqlplus / as sysdba
  SQL> startup force

  SQL> alter system set undo_management=auta scope=spfile;
  SQL> startup force

	ORA-30043: Invalid value 'AUTA' specified for parameter 'Undo_Management'

  SQL> create pfile from spfile;
  SQL> !vi /u01/app/oracle/product/11.2.0/dbhome_1/dbs/initbrdb.ora

	# 아래 파라미터만 수정하세요.

	*.undo_management='AUTO'

  SQL> create spfile from pfile;
  SQL> startup force

  SQL> show parameter spfile

	NAME                                 TYPE                   VALUE
	------------------------------------ ---------------------- ----------------------------------------------------------
	spfile                               string                 /u01/app/oracle/product/11.2.0/dbhome_1/dbs/spfilebrdb.ora

  SQL> exit

-----------------------------------------------------------
 [0] password file 손상
-----------------------------------------------------------

  [oracle@ora11gr2 ~]$ rm /u01/app/oracle/product/11.2.0/dbhome_1/dbs/orapwbrdb

	--> 원격지에서 sys로 접속할 수 없게 됩니다. SQL*Plus, iSQL*Plus DBA, EM을 이용해서 sys로 접속할 수 없다는 것입니다.

  [oracle@ora11gr2 ~]$ orapwd file=/u01/app/oracle/product/11.2.0/dbhome_1/dbs/orapwbrdb password=weekend entries=5

-----------------------------------------------------------
 [1] control file 1개 손상 
-----------------------------------------------------------

  [oracle@ora11gr2 ~]$ sqlplus / as sysdba
  SQL> startup force
  SQL> select name from v$controlfile;

	NAME
	-----------------------------------------------
	/u01/app/oracle/oradata/brdb/control01.ctl
	/u01/app/oracle/oradata/brdb/control02.ctl

  SQL> exit

  [oracle@ora11gr2 ~]$ rm /u01/app/oracle/oradata/brdb/control02.ctl

  [oracle@ora11gr2 ~]$ sqlplus / as sysdba
  SQL> startup force

	ORA-00205: error in identifying control file, check alert log for more info

  SQL> select status from v$instance;

	STATUS
	------------------------
	STARTED

  SQL> !vi + /u01/app/oracle/diag/rdbms/brdb/brdb/trace/alert_brdb.log

	ORA-00202: control file: '/u01/app/oracle/oradata/brdb/control02.ctl'
	ORA-27037: unable to obtain file status

  SQL> !cp /u01/app/oracle/oradata/brdb/control01.ctl /u01/app/oracle/oradata/brdb/control02.ctl
  SQL> startup force
  SQL> exit

-----------------------------------------------------------
 [2] control file 몽땅 손상 
-----------------------------------------------------------

  [oracle@ora11gr2 ~]$ rm /u01/app/oracle/oradata/brdb/control*

  [oracle@ora11gr2 ~]$ sqlplus / as sysdba
  SQL> startup force

  SQL> select status from v$instance;

	STATUS
	------------------------
	STARTED

  SQL> !vi + /u01/app/oracle/diag/rdbms/brdb/brdb/trace/alert_brdb.log

	ORA-00202: control file: '/u01/app/oracle/oradata/brdb/control01.ctl'
	ORA-27037: unable to obtain file status

  SQL> !cp /u01/app/oracle/oradata/brdb/control02.ctl /u01/app/oracle/oradata/brdb/control01.ctl --> 실패 : 모든 컨트롤 파일이 삭제되었음을 확인하는 순간이다.

  SQL> !vi /u01/app/oracle/oradata/openbackup/control_20120218.sql

	--> 필요한 내용만 남기고 다른 내용은 모두 삭제하시면 됩니다.
        --> 실습의 편의를 위해 아래처럼 하세요.

  SQL> !vi /u01/app/oracle/oradata/openbackup/create_control_file.sql

	CREATE CONTROLFILE REUSE DATABASE "BRDB" NORESETLOGS  ARCHIVELOG
	    MAXLOGFILES 16
	    MAXLOGMEMBERS 2
	    MAXDATAFILES 30
	    MAXINSTANCES 1
	    MAXLOGHISTORY 292
	LOGFILE
	  GROUP 1 (
	    '/u01/app/oracle/oradata/brdb/redo01_a.log',
	    '/u01/app/oracle/oradata/brdb/redo01_b.log'
	  ) SIZE 20M,
	  GROUP 2 (
	    '/u01/app/oracle/oradata/brdb/redo02_a.log',
	    '/u01/app/oracle/oradata/brdb/redo02_b.log'
	  ) SIZE 20M
	DATAFILE
	  '/u01/app/oracle/oradata/brdb/system01.dbf',
	  '/u01/app/oracle/oradata/brdb/undotbs01.dbf',
	  '/u01/app/oracle/oradata/brdb/sysaux01.dbf'
	CHARACTER SET US7ASCII
	;

	RECOVER DATABASE

	ALTER SYSTEM ARCHIVE LOG ALL;
	ALTER DATABASE OPEN;
	ALTER TABLESPACE TEMP ADD TEMPFILE '/u01/app/oracle/oradata/brdb/temp01.tmp'
	     SIZE 20971520  REUSE AUTOEXTEND ON NEXT 20971520  MAXSIZE 2048M;

  SQL> startup force nomount
  SQL> @/u01/app/oracle/oradata/openbackup/create_control_file.sql

  SQL> select status from v$instance;

	STATUS
	------------------------
	OPEN

  SQL> !ls -l /u01/app/oracle/oradata/brdb/*.ctl

	-rw-r-----  1 oracle oinstall 6307840  9월 16 17:10 /u01/app/oracle/oradata/brdb/control01.ctl
	-rw-r-----  1 oracle oinstall 6307840  9월 16 17:10 /u01/app/oracle/oradata/brdb/control02.ctl

-----------------------------------------------------------
 [3] redo log file 멤버 1개 손상
-----------------------------------------------------------

  SQL> col member format a60
  SQL> select group#, member from v$logfile;

  SQL> !rm /u01/app/oracle/oradata/brdb/redo02_a.log
  SQL> startup force

  SQL> alter system switch logfile;
  SQL> alter system switch logfile;
  SQL> alter system switch logfile;
  SQL> alter system switch logfile;

  SQL> !vi + /u01/app/oracle/diag/rdbms/brdb/brdb/trace/alert_brdb.log

	--> 파일을 거슬러 읽어가다보면 아래와 같은 내용을 만나게 될 것이다.

	ORA-00313: open failed for members of log group 2 of thread 1
	ORA-00312: online log 2 thread 1: '/u01/app/oracle/oradata/brdb/redo02_a.log'
	ORA-27037: unable to obtain file status

  SQL> !cp /u01/app/oracle/oradata/brdb/redo02_b.log /u01/app/oracle/oradata/brdb/redo02_a.log

  SQL> startup force

  SQL> alter system switch logfile;
  SQL> alter system switch logfile;
  SQL> alter system switch logfile;
  SQL> alter system switch logfile;

  SQL> !vi + /u01/app/oracle/diag/rdbms/brdb/brdb/trace/alert_brdb.log

-----------------------------------------------------------
 [4] redo log file 그룹 손상 : Inactive
-----------------------------------------------------------

  SQL> alter database add logfile ('/u01/app/oracle/oradata/brdb/redo03_a.log', 
                                   '/u01/app/oracle/oradata/brdb/redo03_b.log') size 20M;

  SQL> alter system switch logfile;
  SQL> alter system switch logfile;

  SQL> select * from v$log;
  SQL> alter system checkpoint;
  SQL> select * from v$log where status = 'INACTIVE';

  SQL> select '!rm '||member from v$logfile
       where group# = (select max(group#)from v$log where status = 'INACTIVE');

  SQL> !rm /u01/app/oracle/oradata/brdb/redo0□_a.log   --> □에 해당되는 숫자는 각자 다를 수 있습니다.
  SQL> !rm /u01/app/oracle/oradata/brdb/redo0□_b.log
  SQL> exit

  [oracle@ora11gr2 ~]$ export NLS_LANG=american_america.us7ascii
  [oracle@ora11gr2 ~]$ sqlplus / as sysdba
  SQL> startup force

       ORA-03113: end-of-file on communication channel
       Process ID: 3071
       Session ID: 87 Serial number: 5

  SQL> !vi + /u01/app/oracle/diag/rdbms/brdb/brdb/trace/alert_brdb.log

  SQL> exit

  [brdb:~]$ sqlplus / as sysdba

  SQL> startup mount

  SQL> select group#, status from v$log order by 1;

	--> 질의결과를 통해 손상된 그룹이 inactive 그룹임을 확인했다.

  SQL> alter database drop logfile group ?;

  SQL> alter database open;

  SQL> select group#, status from v$log order by 1;

  SQL> alter database add logfile group ? ('/u01/app/oracle/oradata/brdb/redo0□_a.log', 
                                           '/u01/app/oracle/oradata/brdb/redo0□_b.log') size 10m;

  SQL> alter database add logfile group 3 ('/u01/app/oracle/oradata/brdb/redo03_a.log', 
                                           '/u01/app/oracle/oradata/brdb/redo03_b.log') size 10m;

  SQL> select group#, status from v$log order by 1;

  --> 장애는 간단히 해결되었으나 반드시 Whole 백업을 해야 한다.

  SQL> shutdown immediate
  SQL> !cp -R /u01/app/oracle/oradata/brdb/* /u01/app/oracle/oradata/dontouch
  SQL> exit

----------------------------------------------------------
 [5] datafile 손상 : temporary Tablespace의 datafile
----------------------------------------------------------

  [oracle@ora11gr2 ~]$ export ORACLE_SID=brdb
  [oracle@ora11gr2 ~]$ sqlplus / as sysdba
  SQL> startup

  SQL> create tablespace users 
       datafile '/u01/app/oracle/oradata/brdb/users01.dbf' size 20m;

  SQL> alter tablespace users begin backup;
  SQL> !cp /u01/app/oracle/oradata/brdb/users01.dbf /u01/app/oracle/oradata/dontouch
  SQL> alter tablespace users end backup;

  SQL> create user james identified by bond default tablespace users temporary tablespace temp quota 1m on users;

  SQL> grant create session, create table
       to james;

  SQL> conn james/bond

  SQL> create table t1 
       as select * from all_objects;
 
  SQL> alter session set workarea_size_policy=manual;
  SQL> alter session set sort_area_size=10;

  SQL> !rm /u01/app/oracle/oradata/brdb/temp01.tmp

  SQL> select *
       from t1 a, t1 b, t1 c, t1 d
       order by 1, 2, 3, 4, 5, 6, 7, 8, 9, 10;

	ORA-01116: error in opening database file 201
	ORA-01110: data file 201: '/u01/app/oracle/oradata/brdb/temp01.tmp'

  SQL> conn / as sysdba
  SQL> startup force
  SQL> !ls -l /u01/app/oracle/oradata/brdb/temp01.tmp

  SQL> !vi + /u01/app/oracle/diag/rdbms/brdb/brdb/trace/alert_brdb.log

	Mon Sep 19 14:23:33 2011
	Re-creating tempfile /u01/app/oracle/oradata/brdb/temp01.tmp

	--> startup을 다시 하지 않고 문제를 해결하는 방법 : 11gWS2의 4-6 페이지를 참조하세요.

  SQL> exit

----------------------------------------------------------------
 [6] datafile 손상 : 일반 Tablespace의 datafile --> Open 복구
----------------------------------------------------------------

  [oracle@ora11gr2 ~]$ export ORACLE_SID=brdb
  [oracle@ora11gr2 ~]$ export NLS_LANG=american_america.us7ascii
  [oracle@ora11gr2 ~]$ sqlplus / as sysdba
  SQL> startup force
  SQL> show user
  USER은 "SYS"입니다

  SQL> alter system switch logfile;
  SQL> alter system switch logfile;
  SQL> alter system switch logfile;
  SQL> alter system switch logfile;
  SQL> alter system switch logfile;
  SQL> alter system switch logfile;

  SQL> !rm /u01/app/oracle/oradata/brdb/users01.dbf

  SQL> startup force

	ORA-01157: cannot identify/lock data file 4 - see DBWR trace file
	ORA-01110: data file 4: '/u01/app/oracle/oradata/brdb/users01.dbf'

  SQL> alter database datafile 4 offline;
  SQL> alter database open;

  SQL> !cp /u01/app/oracle/oradata/dontouch/users01.dbf /u01/app/oracle/oradata/brdb/users01.dbf
  SQL> recover datafile 4;

	Specify log: {<RET>=suggested | filename | AUTO | CANCEL}
	|auto      <-- auto 입력

  SQL> alter database datafile 4 online;

---------------------------------------------------------------------------------
 [7] datafile 손상 : 시스템(및 Undo) Tablespace의 datafile --> Closed 복구
---------------------------------------------------------------------------------

  SQL> !rm /u01/app/oracle/oradata/brdb/system01.dbf

  SQL> startup force

	ORA-01157: cannot identify/lock data file 1 - see DBWR trace file
	ORA-01110: data file 1: '/u01/app/oracle/oradata/brdb/system01.dbf'

  SQL> alter database datafile 1 offline;

  SQL> alter database open;

	ORA-01147: SYSTEM tablespace file 1 is offline
	ORA-01110: data file 1: '/u01/app/oracle/oradata/brdb/system01.dbf'

  SQL> !cp /u01/app/oracle/oradata/dontouch/system01.dbf /u01/app/oracle/oradata/brdb/system01.dbf

  SQL> alter database datafile 1 online;

  SQL> recover datafile 1;

	Specify log: {<RET>=suggested | filename | AUTO | CANCEL}
	|auto      <-- auto 입력

  SQL> alter database open;


----------------------------------------------------------
 [8] datafile 손상 : 백업하지 않은 datafile
----------------------------------------------------------

  * 주의 사항 : http://cafe.naver.com/gsinternet/32

  SQL> col name format a60
  SQL> select FILE#, CREATION_CHANGE#, CREATION_TIME, name from v$datafile;

  SQL> create tablespace ms_ts datafile '/u01/app/oracle/oradata/brdb/ms_ts01.dbf' size 10m;

  SQL> alter system switch logfile;
  SQL> alter system switch logfile;
  SQL> alter system switch logfile;
  SQL> alter system switch logfile;
  SQL> alter system switch logfile;

  SQL> !rm /u01/app/oracle/oradata/brdb/ms_ts01.dbf

  SQL> startup force

	ORA-01157: cannot identify/lock data file 5 - see DBWR trace file
	ORA-01110: data file 5: '/u01/app/oracle/oradata/brdb/ms_ts01.dbf'

  SQL> alter database datafile '/u01/app/oracle/oradata/brdb/ms_ts01.dbf' offline;

  SQL> alter database open;

  SQL> !cp /u01/app/oracle/oradata/dontouch/ms_ts01.dbf /u01/app/oracle/oradata/brdb/ms_ts01.dbf

	에러! : 백업하지 않는 datafile이 손상되었음을 발견하는 상황이 발생한 것이다.

  SQL> select FILE#, CREATION_CHANGE#, CREATION_TIME, name from v$datafile;

  SQL> alter database create datafile '/u01/app/oracle/oradata/brdb/ms_ts01.dbf';
  SQL> recover datafile '/u01/app/oracle/oradata/brdb/ms_ts01.dbf';

	Specify log: {<RET>=suggested | filename | AUTO | CANCEL}
	|auto      <-- auto 입력

  SQL> alter database datafile '/u01/app/oracle/oradata/brdb/ms_ts01.dbf' online;

  SQL> drop tablespace ms_ts including contents and datafiles;

---------------------------------------------------------------------------
 [9] datafile 손상 : 디스크 손상으로 인해 datafile을 다른 위치로 restore
---------------------------------------------------------------------------

  SQL> !rm /u01/app/oracle/oradata/brdb/users01.dbf

  SQL> startup force

	ORA-01157: cannot identify/lock data file 4 - see DBWR trace file
	ORA-01110: data file 4: '/u01/app/oracle/oradata/brdb/users01.dbf'

  SQL> alter database datafile 4 offline;
  SQL> alter database open;

  --> 손상된 파일을 복원하려 했으나 원래 파일이 있던 디스크가 손상되어 
      다른 위치로 복원해야만 한다면 아래와 같은 방법을 사용하시면 됩니다.

  SQL> !mkdir /u01/app/oracle/oradata/disk1
  SQL> !cp /u01/app/oracle/oradata/dontouch/users01.dbf /u01/app/oracle/oradata/disk1/users01.dbf
  SQL> alter database rename file '/u01/app/oracle/oradata/brdb/users01.dbf' to '/u01/app/oracle/oradata/disk1/users01.dbf';

  SQL> recover datafile 4;

	Specify log: {<RET>=suggested | filename | AUTO | CANCEL}
	|auto      <-- auto 입력

  SQL> alter database datafile 4 online;

  SQL> col file_name format a60
  SQL> select tablespace_name, file_name from dba_data_files
       union all
       select tablespace_name, file_name from dba_temp_files;

	TABLESPACE_NAME      CONTENTS  FILE_NAME
	-------------------- --------- --------------------------------------------------
	USERS                PERMANENT /u01/app/oracle/oradata/disk1/users01.dbf    <-- 파일의 위치에 주목하세요.

  -- 정리

  SQL> drop tablespace users including contents and datafiles;
  SQL> !rm -r /u01/app/oracle/oradata/disk1
  SQL> shutdown immediate

  -- Whole backup 및 과거 백업 정리

  SQL> !rm -rf /u01/app/oracle/oradata/dontouch/*
  SQL> !rm -rf /u01/app/oracle/oradata/brdb_arch1/*
  SQL> !rm -rf /u01/app/oracle/oradata/brdb_arch2/*

  SQL> !cp /u01/app/oracle/oradata/brdb/* /u01/app/oracle/oradata/dontouch
  SQL> exit

*******************************************************
 아래에서는 불완전 복구 상황들을 다룹니다.
*******************************************************

----------------------------------------------------------------
 [10] table drop purge : flashback으로 복구 불가능한 경우
----------------------------------------------------------------

  [oracle@ora11gr2 ~]$ sqlplus / as sysdba
  SQL> startup force 

  SQL> alter system switch logfile;
  SQL> alter system switch logfile;
  SQL> alter system switch logfile;
  SQL> alter system switch logfile;
  SQL> alter system switch logfile;

  SQL> alter user james quota 1m on system;
  SQL> create table james.t2 (no number) tablespace system;  
  SQL> insert into james.t2 values (1000);
  SQL> insert into james.t2 values (2000);
  SQL> commit;

  SQL> select * from james.t2;

  SQL> alter system switch logfile;
  SQL> alter system switch logfile;

  SQL> !date

	2012. 02. 23. (목) 15:10:29 KST

	--> 실제 상황에서는 Logminer를 이용해서 에러가 발생한 시간을 확인하면 됩니다.
	    예제 : http://energ.tistory.com/entry/oracle-logminer

  SQL> alter system switch logfile;
  SQL> alter system switch logfile;

  SQL> drop table james.t2 purge;
  SQL> select * from james.t2;

	ORA-00942: table or view does not exist

  SQL> show recyclebin

	--> 중요한 테이블이 삭제되었음을 알게되어 recyclebin을 확인했으나 완전히 삭제되었음을 알게되었다.
	--> 아직 clone database를 이용한 복구를 알지 못하는 수준이기에 일반적인 불완전 복구를 수행하기로 결정한다.

               모든 datafile 복원
                      ↓
               startup mount;
                      ↓
               recover database until time '원하는 시점';
                      ↓
               alter database open resetlogs;

  SQL> shutdown abort

  SQL> !cp /u01/app/oracle/oradata/dontouch/*.dbf /u01/app/oracle/oradata/brdb
  SQL> startup mount;
  SQL> recover database until time '2017-06-12 16:22:01';


	Specify log: {<RET>=suggested | filename | AUTO | CANCEL}
	|auto      <-- auto 입력

  SQL> alter database open resetlogs;

  SQL> select * from james.t2;

	        NO
	----------
	      2000
	      1000

  SQL> select * from v$log;


	    GROUP#    THREAD#  SEQUENCE#      BYTES    MEMBERS ARC STATUS           FIRST_CHANGE# FIRST_TIM
	---------- ---------- ---------- ---------- ---------- --- ---------------- ------------- ---------
        	 1          1          0   20971520          2 YES UNUSED                       0
	         2          1          1   20971520          2 NO  CURRENT                 515775 10-DEC-11
	         3          1          0   10485760          2 YES UNUSED                       0

	--> 여러 그룹의 status가 unused이고 sequence#이 0이라는 것에 주목하세요.

  SQL> exit

------------------------------------------------------------------------
 [11] Database의 백업 datafile을 이용해서 복제 DB 생성하기  
------------------------------------------------------------------------

  * 참고 : http://gseducation.blog.me/20096193881

  [oracle@ora11gr2 ~]$ mkdir /home/oracle/cldb
  [oracle@ora11gr2 ~]$ cp /u01/app/oracle/oradata/dontouch/*.dbf /home/oracle/cldb

  [oracle@ora11gr2 ~]$ export ORACLE_SID=brdb 
  [oracle@ora11gr2 ~]$ sqlplus / as sysdba
  SQL> create pfile='/home/oracle/cldb/initcldb.ora' from spfile;
  SQL> alter database backup controlfile to trace as '/home/oracle/cldb/create_cldb_controlfile.sql';

  SQL> !ls -l  /home/oracle/cldb

	-rw-r--r--  1 oracle oinstall      6648  9월 20 14:39 create_babadb_controlfile.sql
	-rw-r--r--  1 oracle oinstall       579  9월 20 14:38 initbabadb.ora
	-rw-r-----  1 oracle oinstall 209719296  9월 20 14:36 sysaux01.dbf
	-rw-r-----  1 oracle oinstall 209719296  9월 20 14:37 system01.dbf
	-rw-r-----  1 oracle oinstall 125833216  9월 20 14:37 undotbs01.dbf

  SQL> exit

  [oracle@ora11gr2 ~]$ vi /home/oracle/cldb/initcldb.ora

	*.db_name='cldb'
	*.instance_name='cldb'
	*.compatible='11.2.0'
	*.control_files='/home/oracle/cldb/control01.ctl'
	*.log_archive_dest_1='location=/home/oracle/cldb/'
	*.db_block_size=4096
	*.db_cache_size=67108864
	*.processes=100
	*.remote_login_passwordfile='EXCLUSIVE'
	*.shared_pool_size=75497472
	*.undo_management='auto'
	*.undo_tablespace='UNDOTBS01'

  [oracle@ora11gr2 ~]$ vi /home/oracle/cldb/create_cldb_controlfile.sql

	CREATE CONTROLFILE set DATABASE "cldb" resetlogs  ARCHIVELOG
	LOGFILE
	  GROUP 1 (
	    '/home/oracle/cldb/redo01_a.log'
	  ) SIZE 20M,
	  GROUP 2 (
	    '/home/oracle/cldb/redo02_a.log'
	  ) SIZE 20M
	DATAFILE
	  '/home/oracle/cldb/system01.dbf',
	  '/home/oracle/cldb/undotbs01.dbf',
	  '/home/oracle/cldb/sysaux01.dbf'
	CHARACTER SET US7ASCII;

  [oracle@ora11gr2 ~]$ export ORACLE_SID=cldb
  [oracle@ora11gr2 ~]$ sqlplus / as sysdba
  SQL> startup nomount pfile=/home/oracle/cldb/initcldb.ora
  SQL> @/home/oracle/cldb/create_cldb_controlfile.sql

  SQL> select status from v$instance;

	STATUS
	------------
	MOUNTED

  SQL> !ls -l  /home/oracle/cldb

	-rw-r-----  1 oracle oinstall   6078464  9월 20 14:50 control01.ctl
	-rw-r--r--  1 oracle oinstall       446  9월 20 14:47 create_cldb_controlfile.sql
	-rw-r--r--  1 oracle oinstall       371  9월 20 14:42 initbabadb.ora
	-rw-r-----  1 oracle oinstall 209719296  9월 20 14:36 sysaux01.dbf
	-rw-r-----  1 oracle oinstall 209719296  9월 20 14:37 system01.dbf
	-rw-r-----  1 oracle oinstall 125833216  9월 20 14:37 undotbs01.dbf

  SQL> alter database open resetlogs;
  SQL> !ls -l  /home/oracle/cldb

	-rw-r-----  1 oracle oinstall   6078464  9월 20 14:52 control01.ctl
	-rw-r--r--  1 oracle oinstall       446  9월 20 14:47 create_babadb_controlfile.sql
	-rw-r--r--  1 oracle oinstall       371  9월 20 14:42 initbabadb.ora
	-rw-r-----  1 oracle oinstall  20972032  9월 20 14:51 redo01_a.log
	-rw-r-----  1 oracle oinstall  20972032  9월 20 14:51 redo02_a.log
	-rw-r-----  1 oracle oinstall 209719296  9월 20 14:51 sysaux01.dbf
	-rw-r-----  1 oracle oinstall 209719296  9월 20 14:51 system01.dbf
	-rw-r-----  1 oracle oinstall 125833216  9월 20 14:51 undotbs01.dbf

  SQL> select instance_name, status from v$instance;

	INSTANCE_NAME                    STATUS
	-------------------------------- ------------------------
	cldb                             OPEN

  SQL> col member format a60
  SQL> select * from v$log;
  SQL> select * from v$logfile;

  SQL> shutdown abort
  SQL> exit

  [oracle@ora11gr2 ~]$ rm -rf /home/oracle/cldb

------------------------------------------------------------------------
 [12] Clone Database를 이용한 복구 (user-managed 방식)      
------------------------------------------------------------------------

  [oracle@ora11gr2 ~]$ export NLS_LANG=american_america.us7ascii
  [oracle@ora11gr2 ~]$ export ORACLE_SID=brdb
  [oracle@ora11gr2 ~]$ sqlplus / as sysdba
  SQL> startup force 

  SQL> alter system switch logfile;
  SQL> alter system switch logfile;
  SQL> alter system switch logfile;
  SQL> alter system switch logfile;
  SQL> alter system switch logfile;

  SQL> shutdown immediate
  SQL> !cp -R /u01/app/oracle/oradata/brdb/* /u01/app/oracle/oradata/dontouch

  SQL> startup

  SQL> insert into james.t2 values (3000);
  SQL> insert into james.t2 values (4000);
  SQL> select * from  james.t2;
  SQL> commit;

  SQL> alter system switch logfile;
  SQL> alter system switch logfile;
  SQL> alter system switch logfile;
  SQL> alter system switch logfile;
  SQL> alter system switch logfile;

  SQL> !date

	2012. 02. 23. (목) 17:15:46 KST

  SQL> alter system switch logfile;
  SQL> alter system switch logfile;

  SQL> drop table james.t2 purge;

  SQL> alter system switch logfile;
  SQL> alter system switch logfile;
  SQL> alter system switch logfile;
  SQL> alter system switch logfile;

  SQL> select * from  james.t2;

	ORA-00942: table or view does not exist

  SQL> show recyclebin
  SQL> exit

	--> 중요한 테이블이 삭제되었음을 알게되어 recyclebin을 확인했으나 완전히 삭제되었음을 알게되었다.
	--> 그래서 clone database를 이용한 복구를 수행하기로 결정한다.

	       clone database를 이용한 불완전 복구
                      ↓
               필요한 테이블 export
                      ↓
               사용중인 database로 import

  [oracle@ora11gr2 ~]$ mkdir /home/oracle/clonedb
  [oracle@ora11gr2 ~]$ cp /u01/app/oracle/oradata/dontouch/*.dbf /home/oracle/clonedb
  [oracle@ora11gr2 ~]$ cp /u01/app/oracle/oradata/brdb_arch1/*   /home/oracle/clonedb
  [oracle@ora11gr2 ~]$ cp /u01/app/oracle/oradata/brdb/*.log     /home/oracle/clonedb
  [oracle@ora11gr2 ~]$ ls -l /home/oracle/clonedb

  [oracle@ora11gr2 ~]$ export ORACLE_SID=brdb  
  [oracle@ora11gr2 ~]$ sqlplus / as sysdba
  SQL> create pfile='/home/oracle/clonedb/initclonedb.ora' from spfile;
  SQL> alter database backup controlfile to trace as '/home/oracle/clonedb/create_clonedb_controlfile.sql';
  SQL> exit

  [oracle@ora11gr2 ~]$ vi /home/oracle/clonedb/initclonedb.ora

	*.db_name='clonedb'
	*.instance_name='clonedb'
	*.compatible='11.2.0'
	*.control_files='/home/oracle/clonedb/control01.ctl'
	*.log_archive_dest_1='location=/home/oracle/clonedb/'
	*.db_block_size=4096
	*.db_cache_size=67108864
	*.processes=100
	*.remote_login_passwordfile='EXCLUSIVE'
	*.shared_pool_size=75497472
	*.undo_management='auto'
	*.undo_tablespace='UNDOTBS01'

  [oracle@ora11gr2 ~]$ vi /home/oracle/clonedb/create_clonedb_controlfile.sql

	CREATE CONTROLFILE set DATABASE "clonedb" resetlogs  ARCHIVELOG
	LOGFILE
	  GROUP 1 (
	    '/home/oracle/clonedb/redo01_a.log'
	  ) SIZE 20M,
	  GROUP 2 (
	    '/home/oracle/clonedb/redo02_a.log'
	  ) SIZE 20M,
	  GROUP 3 (
	    '/home/oracle/clonedb/redo03_a.log'
	  ) SIZE 10M
	DATAFILE
	  '/home/oracle/clonedb/system01.dbf',
	  '/home/oracle/clonedb/undotbs01.dbf',
	  '/home/oracle/clonedb/sysaux01.dbf'
	CHARACTER SET US7ASCII;

  [oracle@ora11gr2 ~]$ export ORACLE_SID=clonedb
  [oracle@ora11gr2 ~]$ sqlplus / as sysdba
  SQL> startup nomount pfile=/home/oracle/clonedb/initclonedb.ora
  SQL> @/home/oracle/clonedb/create_clonedb_controlfile.sql

  SQL> !ls -l /home/oracle/clonedb

  SQL> select instance_name, status from v$instance;

	INSTANCE_NAME                    STATUS
	-------------------------------- ------------------------
	clonedb                          MOUNTED

  SQL> -- 아래 명령에서 사용되는 시간은 모두 다릅니다. 위의 date 명령에서 확인한 시간을 사용하세요.

  SQL> recover database until time '2017-06-12 17:18:14' USING backup controlfile;

	Specify log: {<RET>=suggested | filename | AUTO | CANCEL}
	|auto      <-- auto 입력

	... 생략 ...

  SQL> alter database open resetlogs;
  SQL> select * from  james.t2;
  SQL> exit

  [oracle@ora11gr2 ~]$ exp james/bond file=a.dmp tables=t2

  [oracle@ora11gr2 ~]$ export ORACLE_SID=brdb
  [oracle@ora11gr2 ~]$ sqlplus / as sysdba
  SQL> select * from james.t2;
  SQL> !imp james/bond file=a.dmp tables=t2
  SQL> select * from james.t2;
  SQL> exit

  [oracle@ora11gr2 ~]$ export ORACLE_SID=clonedb
  [oracle@ora11gr2 ~]$ sqlplus / as sysdba
  SQL> shutdown  abort
  SQL> exit

  [oracle@ora11gr2 ~]$ rm -rf /home/oracle/clonedb


--------------------------------------------------------------
 [13] current(또는 active) group 손상
--------------------------------------------------------------

 - 에러 상황 재현

  SQL> startup

  SQL> alter system switch logfile;
  SQL> /
  SQL> /
  SQL> /
  SQL> /
  SQL> /

  SQL> select group#, status from v$log;

  SQL> select '!rm '||member as commands from v$logfile
       where group# = (select MAX(group#) from v$log where status = 'CURRENT');

  SQL> !rm /u01/app/oracle/oradata/prod/redo0□_a.log
  SQL> !rm /u01/app/oracle/oradata/prod/redo0□_b.log

  SQL> startup force

	ORA-00313: open failed for members of log group □ of thread 1
	ORA-00312: online log □ thread 1: '/u01/app/oracle/oradata/prod/redo0□_a.log'
	ORA-00312: online log □ thread 1: '/u01/app/oracle/oradata/prod/redo0□_b.log'

  SQL> select group#, status from v$log order by group#;
 
        --> 삭제된 그룹이 CURRENT임을 확인하고 복구를 수행한다.

  SQL> alter database clear logfile group □;

	ORA-01624: log □ needed for crash recovery of instance prod (thread 1)
	ORA-00312: online log □ thread 1: '/u01/app/oracle/oradata/prod/redo0□_a.log'
	ORA-00312: online log □ thread 1: '/u01/app/oracle/oradata/prod/redo0□_b.log'

        --> CURRENT 그룹은 clear할 수 없다.

  SQL> alter database drop logfile group □;

	ORA-01623: log □ is current log for instance prod (thread 1) - cannot drop
	ORA-00312: online log □ thread 1: '/u01/app/oracle/oradata/prod/redo0□_a.log'
	ORA-00312: online log □ thread 1: '/u01/app/oracle/oradata/prod/redo0□_b.log'

        --> CURRENT 그룹은 clear할 수 없다.

 - 복구

  SQL> shutdown abort
  SQL> !cp /u01/app/oracle/oradata/dontouch/*.dbf /u01/app/oracle/oradata/brdb    --> 모든 datafile 복원
  SQL> startup mount                                                              --> Startup mount
  SQL> recover database;

	Specify log: {<RET>=suggested | filename | AUTO | CANCEL}
	auto       <-- 입력 

        ...

	ORA-00283: recovery session canceled due to errors
	ORA-00313: open failed for members of log group 2 of thread 1
	ORA-00312: online log 2 thread 1: '/u01/app/oracle/oradata/prod/redo02_b.log'
	ORA-27037: unable to obtain file status
	Linux Error: 2: No such file or directory
	Additional information: 3
	ORA-00312: online log 2 thread 1: '/u01/app/oracle/oradata/prod/redo02_a.log'
	ORA-27037: unable to obtain file status
	Linux Error: 2: No such file or directory
	Additional information: 3

	ORA-01112: media recovery not started

	--> 에러가 발생하면 복구가 중지됩니다.

  SQL> recover database until cancel;

	Specify log: {<RET>=suggested | filename | AUTO | CANCEL}
	cancel     <-- 입력 

  SQL> !ls -l /u01/app/oracle/oradata/prod/*.log        --> 아직 삭제된 redo log file이 복구되지 않았음을 확인

  SQL> alter database open resetlogs;

  SQL> !ls -l /u01/app/oracle/oradata/prod/*.log        --> 삭제된 redo log file이 복구되었음을 확인

  SQL> select * from v$log;

	    GROUP#    THREAD#  SEQUENCE#      BYTES    MEMBERS ARC STATUS           FIRST_CHANGE# FIRST_TIM
	---------- ---------- ---------- ---------- ---------- --- ---------------- ------------- ---------
	         1          1          0   20971520          2 YES UNUSED                       0
	         2          1          1   20971520          2 NO  CURRENT                 963987 21-JUL-11
	         3          1          0   10485760          2 YES UNUSED                       0
	         4          1          0   10485760          2 YES UNUSED                       0

  SQL> shutdown immediate
  SQL> !ls -l /u01/app/oracle/oradata/prod_arch1/
  SQL> !rm /u01/app/oracle/oradata/prod_arch1/*
  SQL> !rm /u01/app/oracle/oradata/prod_arch2/*

  SQL> !cp /u01/app/oracle/oradata/prod/* /u01/app/oracle/oradata/dontouch
  SQL> !ls -l /u01/app/oracle/oradata/dontouch
  SQL> exit


 *************************************************
  cf.OMF 방식으로 Database 생성하기
 *************************************************

  0.디렉토리 및 파라미터 파일 생성

   OS] mkdir /u01/app/oracle/oradata/omfdb               --> Database Area
   OS] mkdir /u01/app/oracle/oradata/omfdb_dontouch      --> Recovery Area
   OS] vi $ORACLE_HOME/dbs/initomfdb.ora

	db_name       = omfdb
	instance_name = omfdb
	compatible    = 11.2.0
	processes     = 100
	
	undo_management = auto

	db_cache_size    = 64m
	shared_pool_size = 72m
	db_block_size    = 4096

        db_create_file_dest         = '/u01/app/oracle/oradata/omfdb/'
        db_create_online_log_dest_1 = '/u01/app/oracle/oradata/omfdb/'
        db_create_online_log_dest_2 = '/u01/app/oracle/oradata/omfdb/'

        db_recovery_file_dest_size = 4G
        db_recovery_file_dest = '/u01/app/oracle/oradata/omfdb_dontouch/'

	remote_login_passwordfile = exclusive


  1.Software 시작

    OS] export ORACLE_SID=omfdb
    OS] sqlplus / as sysdba
    SQL> startup nomount

  2.Create database 명령 실행 

    SQL> create database omfdb;

    SQL> ed db.sql

        col name format a80

        select name from v$controlfile
        union all
        select member from v$logfile
        union all
        select name from v$datafile
        union all
        select name from v$tempfile;

    SQL> @db.sql

	NAME
	--------------------------------------------------------------------------------
	/u01/app/oracle/oradata/omfdb/OMFDB/controlfile/o1_mf_72sp107p_.ctl
	/u01/app/oracle/oradata/omfdb/OMFDB/controlfile/o1_mf_72sp10cp_.ctl
	/u01/app/oracle/oradata/omfdb/OMFDB/onlinelog/o1_mf_1_72sp10gm_.log
	/u01/app/oracle/oradata/omfdb/OMFDB/onlinelog/o1_mf_1_72sp10q0_.log
	/u01/app/oracle/oradata/omfdb/OMFDB/onlinelog/o1_mf_2_72sp12l9_.log
	/u01/app/oracle/oradata/omfdb/OMFDB/onlinelog/o1_mf_2_72sp159p_.log
	/u01/app/oracle/oradata/omfdb/OMFDB/datafile/o1_mf_system_72sp1b97_.dbf
	/u01/app/oracle/oradata/omfdb/OMFDB/datafile/o1_mf_sys_undo_72sp1nf7_.dbf
	/u01/app/oracle/oradata/omfdb/OMFDB/datafile/o1_mf_sysaux_72sp1nxp_.dbf

    SQL> create temporary tablespace temp;
    SQL> create tablespace users1;
    SQL> create tablespace users2;

    SQL> alter user sys identified by oracle;      --> 기본 암호 : change_on_install
    SQL> alter user system identified by oracle;   --> 기본 암호 : manager
 
  3.필수 Script 수행

    SQL> ed after_db_create.sql

	conn sys/oracle as sysdba
	@?/rdbms/admin/catalog.sql
	@?/rdbms/admin/catproc.sql

	conn system/oracle
	@?/sqlplus/admin/pupbld.sql

    SQL> @ after_db_create.sql

    --> 아래 질의 결과를 이용해서 control_files 파라미터를 추가 설정하세요.

    SQL> select name from v$controlfile;

	NAME
	--------------------------------------------------------------------------------
	/u01/app/oracle/oradata/omfdb/OMFDB/controlfile/각자파일이름이다릅니다1.ctl
	/u01/app/oracle/oradata/omfdb/OMFDB/controlfile/각자파일이름이다릅니다2.ctl

    SQL> !vi $ORACLE_HOME/dbs/initomfdb.ora

	# 다음 파라미터를 추가하세요.

	control_files = /u01/app/oracle/oradata/omfdb/OMFDB/controlfile/각자파일이름이다릅니다1.ctl, /u01/app/oracle/oradata/omfdb/OMFDB/controlfile/각자파일이름이다릅니다2.ctl

    SQL> connect / as sysdba
    SQL> startup force

    SQL> create tablespace ts100;
    SQL> create tablespace ts101 datafile size 10m;
    SQL> alter database add logfile size 10m;

    SQL> drop tablespace ts100;
    SQL> drop tablespace ts101;
    SQL> alter database drop logfile group 3; 
    SQL> exit
