
=============================
 0
=============================

# 학습 목표

  - SQL     : DDL, DML, TCL, DCL
  - Objects : Table, View, Index, Sequence, Synonym
  - SQL*Plus 

# 용어

  - Data vs Information
  - Database
  - DBMS

  - 관계형데이터베이스(SQL Database) = Table(자료구조) + SQL(입출력명령)

# 실습 환경 설정

  1.Instant Client 다운로드 및 설정

    - http://www.oracle.com/technetwork/database/features/instant-client/index-097480.html

    C:\Users\student> notepad ic.bat

    set path=C:\instantclient_12_1;%path%
     sqlplus dream01/catcher@70.12.50.50:1521/XE

    C:\Users\student> ic

    SQL> show user
    USER is "DREAM01" 

    SQL> select * from tab;

    SQL> ed r.sql

    select no as you
    from (select level as no
          from dual
          connect by level <= 24
          order by dbms_random.value)
    where rownum = 1;

    SQL> @r

  2.실습용 테이블 생성

    - http://cafe.naver.com/n1books/11 포스트에 첨부된 creobjects.sql, demobld.sql 다운로드

    C:\Users\student> ic

    SQL> @C:\Users\student\Desktop\creobjects.sql   -- EMPLOYEES 등 생성
    SQL> @C:\Users\student\Desktop\demobld.sql      -- EMP 등 생성

    C:\Users\student> ic

    SQL> select * from tab;
    SQL> select * from dept;

    SQL> show all

    linesize 80
    pagesize 14

    SQL> select * from emp;

    SQL> set linesize 200 
    SQL> set pagesize 40

    SQL> list     -- 또는 l

    SQL> run
    SQL> r
    SQL> /

  3.SQL Developer 다운로드 설치

    - SQL*Plus List of Unsupported Commands and Features
    - http://www.oracle.com/technetwork/developer-tools/sqlcl/downloads/sqlcl-relnotes-421-3415922.html?printOnly=1#sqlplus

=======================
 SQL*Plus 이해
=======================

# SQL*Plus Commands

  - 환경설정 : set, show
  - 결과포맷 : column, ttitle, btitle, break
  - 명령편집 : edit, list, input, change, append, delete, 숫자
  - 파일편집 : edit  파일이름 : 생성 or 편집               
               save  파일이름 : 버퍼 -> 파일
               get   파일이름 : 파일 -> 버퍼
               start 파일이름 : 파일 -> 버퍼 -> 실행
               (= @ 파일이름)
               spool 파일이름 ~ spool off
  - 치환변수 : &, &&, define, undefine, accept, 숫자
 
  cf. ed 파일이름 -> @파일이름
      ed          -> run (또는 r 또는 /)

# 환경설정
               
  SQL> show user
  SQL> show all

  SQL> show colsep
  SQL> set colsep |
  SQL> select * from dept;

  SQL> set underline *

  SQL> r
    1* select * from dept

  SQL> exit

# 결과포맷

  SQL> select department_id, employee_id, last_name, salary
       from employees;

  SQL> col last_name     format a10
  SQL> col salary        format 999,999.99
  SQL> col employee_id   heading ENO format 999
  SQL> col department_id heading D|E|P|T|N|O 

  SQL> col
  SQL> col salary

  SQL> /

  SQL> col employee_id clear
  SQL> clear col

  SQL> ed sal_report.sql

    set linesize 60
    set pagesize 40
    set feedback off
    set verify off

    tti 'Salary|Report'
    bti 'Confidential'
    break on department_id skip 1

    col last_name     format a15
    col salary        format 999,999.99
    col employee_id   heading ENO    format 99999999
    col department_id heading DEPTNO format 99999999

    spool salary_replort.txt

    accept deptno prompt 'Enter DEPTNO Please : '

    select department_id, employee_id, last_name, salary
    from employees
    where department_id in (&deptno)
    order by department_id, salary desc, last_name;
    
    spool off

    tti off
    bti off
    clear break

    col last_name     clear
    col salary        clear 
    col employee_id   clear
    col department_id clear 

    set linesize 200
    set pagesize 40
    set feedback on
    set verify on

  SQL> @ sal_report.sql
  Enter DEPTNO Please : 60

  SQL> ed salary_replort.txt

  SQL> @ sal_report.sql
  Enter DEPTNO Please : 10,50,110

  SQL> ed salary_replort.txt

# 명령편집

  SQL> select empno
    2  from emp;

  SQL> list

  SQL> i
    3  where deptno = 10
    4

  SQL> list
  
  SQL> /

  SQL> l

  SQL> c/10/20
  
  SQL> l
  
  SQL> /

  SQL> l

  SQL> 1

  SQL> a , ename

  SQL> l

  SQL> /

  SQL> i
    4  and job = 'MANAGER'
    5  order by empno;

  SQL> l
    1  select empno, ename
    2  from emp
    3  where deptno = 20
    4  and job = 'MANAGER'
    5* order by empno

  SQL> l 2 5

  SQL> del
  SQL> l

  SQL> del 1 2
  SQL> l
    1  where deptno = 20
    2* and job = 'MANAGER'

  SQL> 0 select * from emp
  SQL> l
    1  select * from emp
    2  where deptno = 20
    3* and job = 'MANAGER'
  SQL> /

# 파일편집 

  SQL> select * from emp
    2  where deptno = 30
    3  and sal >= 1000;

  SQL> save s001.sql

  SQL> select * from dept;
  SQL> l

  SQL> start s001

  SQL> cl buff

  SQL> get s001
  SQL> l
    1  select * from emp
    2  where deptno = 30
    3* and sal >= 1000

  SQL> 2
  
  SQL> c/30/10
    2* where deptno = 10

  SQL> r

  SQL> ed s002.sql

    select * 
    from dept
    where loc like 'NEW%';

  SQL> @s002

# 치환변수(Substitution Variables)

  - 변수     ≒ 그릇
  - 상수     ≒ 그릇
  - 매개변수 ≒ 그릇

  SQL> define
  SQL> define v1 = 100
  SQL> define v1
  SQL> define  

  SQL> undefine v1
  SQL> define

  SQL> ed sv01

    set verify off

    accept amu number prompt 'Enter deptno please : '

    select *
    from emp
    where deptno = &amu;

    set verify on

  SQL> @sv01
  Enter value for amu: 30

  SQL> ed sv02
 
    select *
    from emp
    where ename = '&name';

  SQL> @ sv02

  SQL> ed sv03

    select empno, &&col1
    from emp
    order by &col1;

    undefine col1

  SQL> @ sv03
  Enter value for col1: sal

  SQL> @sv03
  Enter value for col1: deptno

  SQL> ed sv04

    select empno, ename, sal
    from &1
    where deptno = &2
    order by &3;

  SQL> @sv04 emp 30 empno
  SQL> @sv04 emp 10 sal

  SQL> ed sv05

    prompt Salary Report

    col avg_sal new_value sv_avg_sal

    select avg(sal) as avg_sal
    from emp
    where deptno = &1;

    select * 
    from emp
    where deptno = &1
    and sal > &sv_avg_sal;

  SQL> @sv05 10
  SQL> @sv05 30

# desc.sql

  SQL> ed desc.sql

       set linesize 50
       desc &1
       set linesize 200

  SQL> @desc emp

# SQL

  https://en.wikipedia.org/wiki/SQL

# SQL 분류

  - DDL : CREATE, ALTER, DROP, RENAME, TRUCATE, COMMENT
  - DML : INSERT, UPDATE, DELETE, MERGE, SELECT 
  - TCL : COMMIT, ROLLBACK, SAVEPOINT
  - DCL : GRANT, REVOKE

# SELECT 이해

  - 검색, 조회, 질의, ...
  - Queries allow the user to describe desired data.

  select empno, ename, sal, job
  from emp;

  select sal, sal, sal, sal    -- 컬럼 복제
  from emp;

  select sum(sal), avg(sal), max(sal), min(sal)
  from emp;

  select empno, ename, sal, sal*1.3
  from emp;

# SELECT Statement
  
  * SELECT 문장을 작성하거나 해석할 때 권장 순서 (절대 실행순서 아님)

  SELECT   deptno, sum(sal)  -- 4 (mandatory)
  FROM     emp               -- 1 (mandatory)
  WHERE    sal >= 1000       -- 2
  GROUP BY deptno            -- 3 
  HAVING   sum(sal) >= 2000  -- 5
  ORDER BY deptno            -- 6
  ;

# Where절 이해

  * candidate row를 검증해서 T, F, N 가운데 하나를 리턴하는 절인데
    where절이 T를 리턴해야 후보행(candidate row)이 리턴된다.

  select * from emp where sal >= 1500;
  select * from emp where sal >= 1500 and job = 'SALESMAN';

  select * from emp where comm = null;   -- 엉터리
  select * from emp where comm is null;  -- 제대로

  select ename, lower(ename), sal, sal * 1.2
  from emp
  where sal >= 1000;

  drop table t1 purge;
  create table t1 as select * from emp where 1 = 2;

  drop table t1 purge;
  create table t1 as 
  select empno a, deptno b from emp where deptno = 10;

# View 

  - Named Select! 
  - Query Transformation

  create or replace view v1
  as
  select empno, ename
  from emp
  where deptno = 10;

  select *
  from v1
  where ename like 'A%';
 
# print_table 프로시져

  - http://cafe.naver.com/n1books/14 첨부 파일 다운로드

  SQL> @"C:\Users\student\Desktop\print_table .sql"

  SQL> set serveroutput on 
  SQL> exec print_table('select * from employees')

  SQL> exec pt('select * from employees')
  SQL> exec pt('select * from emp where ename = ''ALLEN'' ')

  SQL> create or replace view v1
       as
       select e.empno, e.ename, d.*
       from emp e, dept d
       where e.ename like 'A%'
       and d.deptno = 10;

  SQL> exec pt('select * from v1')

=====================
 1장
=====================

# 1-11 

  가공 -> 연산 - 산술
               - 연결
               - 논리
               - ...

       -> 함수 - Vendor-supplied function - Single-row function
                                          - Multiple-row function
               - User-defined function    - Single-row function
                                          - Multiple-row function

# 1-15

  select empno, 
         sal, 
         comm, 
         sal*12 + nvl(comm, 0)    ann_sal, 
         sal*12 + nvl(comm, 0) as ann_sal,
         sal*12 + nvl(comm, 0)    "$Ann Sal"
  from emp;

# 1-20 concatenation operator, literal

  select empno, ename||' is a '||job as sawon
  from emp;

  select empno,
         'Dear '||ename||'! '||chr(10)||
         'your salary from '||sal||' to '||sal*1.2 as kidding
  from emp;

  select 'drop table '||tname||
         ' cascade constrants;' as commands
  from tab
  where tname like 'E%';

# 1-23

  select ename||'''s house is bigger than Tom''s'     from emp;
  select ename||q'!'s house is bigger than Tom's!' from emp;
  select ename||q'X's house is bigger than Tom'sX' from emp;

# 1-24

  select unique   deptno from emp;
  select distinct deptno from emp;

  select distinct deptno, job
  from emp
  order by 1, 2;

  select empno, sal as salary
  from emp
  where salary > 1000;

=====================
 2장
=====================

# 2-11

  select * from emp
  where mgr = 7698;

  select * from emp
  where mgr = 7839;

  select * from emp
  where mgr = 7788;

    ---

  select * from emp
  where mgr = 7698
  union all
  select * from emp
  where mgr = 7839
  union all
  select * from emp
  where mgr = 7788;

    ---

  select * from emp
  where mgr in (7698, 7839, 7788);

  select * from emp
  where mgr = 7698 or mgr = 7839 or mgr = 7788;

    ---

  select * from emp
  where mgr not in (7698, 7839, 7788);

  select * from emp
  where mgr != 7698 and mgr != 7839 and mgr != 7788;

# 2-12

  select * from emp
  where ename like 'A%';

  select * from emp
  where ename like '_____';

   ---

  >> 중간에 포함된 A_A 찾기

  drop table t1 purge;

  create table t1 (col1 varchar2(30));

  insert into t1 values ('AAA');
  insert into t1 values ('ABA');
  insert into t1 values ('ACA');
  insert into t1 values ('A_A');

  commit;

  select * from t1 where col1 like '%A_A%';              -- 엉터리
  select * from t1 where col1 like '%A!_A%' escape '!';  -- 제대로

# 2-14

  select * from emp where comm = null;    -- 엉터리
  select * from emp where comm is null;   -- 제대로

  cf.

     select * from emp where empno = empno;
     select * from emp where comm = comm;

# 2-23

  select empno, ename, sal salary from emp order by sal;
  select empno, ename, sal salary from emp order by salary;
  select empno, ename, sal salary from emp order by 3;

  select empno, ename, sal salary from emp order by hiredate;

  select deptno, ename, sal from emp order by deptno, sal desc;

  select * from emp order by comm;
  select * from emp order by comm nulls first;

  select * from emp order by comm desc;
  select * from emp order by comm desc nulls last;

# 실습

  문제.월별 정렬 (가공한 결과에 의한 Order by)

    select empno, hiredate, to_char(hiredate, 'MM')
    from emp;

    select empno, hiredate, to_char(hiredate, 'MM')
    from emp
    order by to_char(hiredate, 'MM');

    select empno, hiredate
    from emp
    order by to_char(hiredate, 'MM');

  문제.SQL Yellow p.117 상단

    select to_char(hiredate, 'day') 
    from emp
    where rtrim(to_char(hiredate, 'day')) = 'tuesday';

    select to_char(hiredate, 'day') 
    from emp
    where to_char(hiredate, 'day') like 'tues%';

  문제.jb 출제

    select empno, sal, sal*1.1, s.*
    from emp e, salgrade s
    order by 1;

    select e.empno, 
           e.sal, 
           s.grade
    from emp e, salgrade s
    where e.sal >= s.losal and e.sal <= s.hisal
    order by 1;

    select e.empno, 
           e.sal, 
           (select grade 
            from salgrade s
            where e.sal >= s.losal and e.sal <= s.hisal) ret1,
           e.sal*1.1, 
           (select grade 
            from salgrade s
            where e.sal*1.1 >= s.losal and e.sal*1.1 <= s.hisal) ret2        
    from emp e
    order by 1;

    select *
    from (select e.empno, 
                 e.sal, 
                (select grade 
                 from salgrade s
                 where e.sal >= s.losal and e.sal <= s.hisal) ret1,
                 e.sal*1.1, 
                (select grade 
                 from salgrade s
                 where e.sal*1.1 >= s.losal and e.sal*1.1 <= s.hisal) ret2        
          from emp e)
    where ret1 != ret2
    order by 1;

# 읽기 일관성, Lock 및 Deadlock


  [Session 1]                  [Session 2]

  * 읽기 일관성

  drop table books purge; 

  create table books
  (no number,
   name varchar2(10));

  insert into books
  values (1000, 'ABC');

  insert into books
  values (2000, 'SQL');

  select * from books;

                               select * from books;

  commit;

                               select * from books;

  * Lock

  update books
  set name = 'JAVA'
  where no = 1000;

  select * from books;

                               select * from books;

                               update books
                               set name = 'JAVA'
                               where no = 1000;
                               | waiting!

  commit;

                               commit;

  * Deadlock

  update books
  set name = 'SQL'
  where no = 1000;

                               update books
                               set name = 'SUN'
                               where no = 2000;

  update books
  set name = 'C++'
  where no = 2000;
  | waiting!
                               update books
                               set name = 'Solaris'
                               where no = 1000;
                               | waiting!

  ORA-00060: deadlock detected 
  while waiting for resource

  rollback;

========================
 3장, 4장 단일행 함수
========================

# 3-4 Argument

  col user format a10

  select sysdate, user, ename, initcap(ename) a,  substr(ename, 1, 2) b,  lower(substr(ename, 3)) c
  from emp;

  select substr(empno, 1, 2)||'****' as empno
  from emp;

# user-defined function

  create or replace function tax (a number) return number
  is
  begin
    return a*0.137;
  end;
  /

  select empno, sal, tax(sal) as tax
  from emp;

-------------------
 문자 함수
-------------------

# 3-13 trim과 ltrim, rtrim

  select ltrim('SOS', 'S')            from dual;
  select trim(leading 'S' from 'SOS') from dual;

  select rtrim('SOS', 'S')             from dual;
  select trim(trailing 'S' from 'SOS') from dual;

  select ltrim(rtrim('SOS', 'S'), 'S') from dual;
  select trim(both 'S' from 'SOS')     from dual;

    --

  select ltrim('xyxYxyxy', 'xy')    from dual;
  select trim('xy' from 'xyxYxyxy') from dual;   -- 에러

# instr 함수

  데이터의 단어수를 알수있는 방법 

  drop table t1 purge;

  create table t1 (no number, name varchar2(100));

  insert into t1 values(1, 'oracle ora ora');
  insert into t1 values(2, 'ora oracle ora oracle');
  insert into t1 values(3, ' ora ora');
  insert into t1 values(4, 'ora ora ');
  insert into t1 values(5, 'ora ora');
  insert into t1 values(6, 'ora');

  commit;

  col name format a30
  col a    format 999

  select no, name, instr(trim(' ' from name), ' ', 1, 2) a
  from t1 ;
 
  select no, name, instr(trim(' ' from name), ' ', 1, 2) a
  from t1 
  where instr(trim(' ' from name), ' ', 1, 2) > 0;

# 3-13

  문제.ENAME이 5자인 사원?

    select empno, ename, job
    from emp
    where ename like '_____';

    select empno, ename, job
    from emp
    where length(ename) = 5;

  문제.ENAME에 'A'가 포함된 사원?

    select empno, ename, job
    from emp
    where ename like '%A%';

    select empno, ename, job
    from emp
    where instr(ename, 'A') >= 1;
    
  문제.SAL을 그래프로 나타내세요. 
       * 하나가 100입니다. 반올림하세요.

    select empno, sal, sal
    from emp;

    select empno, sal, round(sal/100)
    from emp;

    col stars format a70

    select empno, sal, rpad(' ', round(sal/100)) as stars
    from emp;

    select empno, sal, rpad('*', round(sal/100), '*') as stars
    from emp;

  문제.숫자로만 이루어진 행 찾기

    drop table t1 purge;
    create table t1 (col1 varchar2(10));

    insert into t1 values('37236');
    insert into t1 values('A747');
    insert into t1 values('788D1');
    insert into t1 values('53');
    insert into t1 values('68348');

    commit;

    해답 1.

      select col1, lower(col1), upper(col1)
      from t1;

      select col1
      from t1
      where lower(col1) = upper(col1);

    해답 2.

      select col1, ltrim(col1, '0123456789')
      from t1;

      select col1
      from t1
      where ltrim(col1, '0123456789') is null;

  문제.연속된 숫자 5개가 포함된 행 찾기

    drop table t1 purge;

    create table t1(col1 varchar2(1000));

    insert into t1 values('이것은 12321이다');
    insert into t1 values('3 곱하기 2는 6이다. 6 나누기 2는 3이다.');

    commit;

    select * from t_five;

    col a format a40
    col b format a40

    select col1 a, 
           translate(col1, '0123456789',
                           '----------') b
    from t1;

    select col1
    from t1
    where translate(col1, '0123456789',
                          '----------') like '%-----%';

    cf.select translate('xYxxYzzxY', 'ax', 'a')
       from dual;

# 3-14

  select ename, substr(ename, -1, 1), substr(ename, -3, 2)
  from emp;

  select ename
  from emp
  where substr(ename, -1, 1) = 'N';

-------------------
 숫자 함수
-------------------

# round, trunc, mod, ceil, floor

  select round(45.995, 2), 
         round(45.995, -2),
         round(654645.995, -2)
  from dual;

  select trunc(45.995, 2), 
         trunc(45.995, -2)
  from dual;

  select empno, mod(empno, 2), mod(empno, 3), mod(empno, 5)
  from emp
  where mod(empno, 2) = 0;

  select ceil(3.14),
         floor(3.14)
  from dual;

# dual

  - sys 소유의 테이블
  - dummy 컬럼, x 값

  select 100*1.3 + 200
  from dual;

  select ltrim('the king', 'the')
  from dual;

-------------------
 날짜 함수
-------------------

# 날짜 연산

  date + number = date
  date - number = date
  date - date   = number
 
  date * 2          : 연산 X
  date + (date + 1) : 연산 X

  alter session set nls_date_format = 'YYYY/MM/DD HH24:MI:SS';

  select sysdate, 
         sysdate + 3, 
         sysdate + 3/24, 
         sysdate + 12/(24*60), 
         sysdate + 36/(24*60*60)
  from dual;  

  select sysdate, 
         sysdate + 100,
         sysdate + 1000,
         sysdate + 10000
  from dual;  

  select sysdate - to_date('19720101', 'YYYYMMDD')
  from dual;

# 날짜 함수

  alter session set nls_date_format = 'DD-MON-RR';

  select empno, 
         hiredate, 
         months_between(sysdate, hiredate),
         add_months(hiredate, 6)
  from emp;

  select sysdate, 
         next_day(sysdate, 'mon')
  from dual;
  
  select last_day(to_date('06-feb-17', 'DD-MON-RR'))
  from dual;
  
# 3-31

  일 : 01 ~ 15 : 탈락
       16 ~ 31 : 반올림

  월 : 01 ~ 06 : 탈락
       07 ~ 12 : 반올림

  select round(to_date('17-JUN-2016', 'DD-MON-YYYY'), 'month') from dual;
  select round(to_date('17-JUN-2016', 'DD-MON-YYYY'), 'year')  from dual;

  select empno, 
         hiredate, 
         trunc(hiredate, 'month'), 
         trunc(hiredate, 'year')
  from emp;

  select empno, 
         hiredate, 
         trunc(hiredate, 'month'), 
         trunc(hiredate, 'year')
  from emp
  where trunc(hiredate, 'month') = '01-FEB-81';

  select empno, 
         hiredate, 
         trunc(hiredate, 'month'), 
         trunc(hiredate, 'year')
  from emp
  where trunc(hiredate, 'year') = '01-JAN-82';

-------------------
 변환 함수
-------------------

# Implicit Conversion

  - expression일 경우

    select 100 + '100'
    from dual;

    select * 
    from emp
    where empno = '7788';

  - assignment일 경우

    select empno, substr(ename, '1', '2')
    from emp;

# to_char : date -> char

  select to_char(hiredate, 'YYYY YYYY YYYY') from emp;

  select to_char(hiredate, 'YEAR Year year') from emp;

  select to_char(hiredate, 'Year Month mon Day dy') from emp;

  select hiredate, to_char(hiredate, 'YYYY Q MM WW W DDD DD D Day') from emp;

  select hiredate, to_char(hiredate, 'RM Rm rm') from emp;

  select to_char(hiredate, 'DD Ddsp ddth ddspth ddthsp') from emp;

  select to_char(sysdate, 'hh24:mi:ss') from dual;

  select to_char(sysdate, 'sssss') from dual;

  select '오늘은 '||to_char(hiredate, 'Year Mon Dy')||'요일입니다.'
  from emp;

  select to_char(hiredate, '"오늘은" YYYY"년" MM"월" DD"일입니다." ')
  from emp;

  cf.fm : fill mode

     select to_char(hiredate, 'fmYear Month DD fmHH24:MI:SS')
     from emp;

# to_char : number -> char

  select empno,
         sal, 
         to_char(sal, '$999,999.99'), 
         to_char(sal, 'L000,000.00', 'nls_currency=\')
  from emp;
  
# to_number

  select '455674', to_number('455674')
  from dual;

# to_date

  select to_date('07/08/09', 'RR/MM/DD')
  from dual;

-------------------
 일반 함수
-------------------

# 4-20
 
  fx = format exact

  SELECT last_name, hire_date
  FROM   employees
  WHERE  hire_date = TO_DATE('May 24, 1999', 'fxMonth DD, YYYY');

# 4-31 nvl, nvl2

  select empno, 
         ename, 
         sal,
         comm,
         sal*12 + nvl(comm, 0)               as ann_sal1,
         nvl2(comm, sal*12+comm, sal*12)     as ann_sal2,
         nvl2(comm, 'sal*12+comm', 'sal*12') as gubun
  from emp;

# 4-32 nullif

  select last_name, 
         first_name, 
         nullif(length(last_name), length(first_name)) as ret
  from employees;

  select last_name, 
         first_name
  from employees
  where nullif(length(last_name), length(first_name))  is null;

# 4-33 coalesce

  drop table t1 purge;

  create table t1
  as
  select comm a, mgr b, empno c
  from emp;

  select * from t1;

  select a, b, c, coalesce(a, b, c, 0) d
  from t1;

  cf.select a, b, c, nvl(nvl(nvl(a, b), c), 0) d
     from t1;

# 4-37 Decode 함수와 Case 표현식

 예제1.

  select /* decode 함수 */
         deptno, 
         sal, 
         decode(deptno, 10, sal*1.1, 
                        20, sal*1.2, 
                            sal) as whatif
  from emp;

  select /* simple case 표현식 */
         deptno, 
         sal,
         case deptno when 10 then sal*1.1
                     when 20 then sal*1.2
                     else         sal
         end as whatif 
  from emp;

  select /* searched case 표현식 */
         deptno, 
         sal,
         case when deptno = 10 then sal*1.1
              when deptno = 20 then sal*1.2
              else                  sal
         end as whatif
  from emp;

 예제2.

    select empno, 
           sal,
           sal/2000,
           trunc(sal/2000)
    from emp;

    select empno, 
           sal,
           decode(trunc(sal/2000), 0, 'low', 1, 'mid', 'high') as gubun
    from emp;

    select empno, 
           sal,
           case trunc(sal/2000) when 0 then 'low'
                                when 1 then 'mid'
                                else        'high'
           end as gubun
    from emp;

    select empno, 
           sal,
           case when sal < 2000 then 'low'
                when sal < 4000 then 'mid'
                else                 'high'
           end as gubun 
    from emp;

# 문제.부서별 업무별 급여합을 매트릭스 형태로 쿼리하세요

  select deptno, sal, sal, sal, sal
  from emp;

  select deptno, sal, decode(deptno, 10, sal) d10, sal, sal
  from emp;

  select deptno, 
         sal, 
         decode(deptno, 10, sal) d10,
         decode(deptno, 20, sal) d20,
         decode(deptno, 30, sal) d30
  from emp;

  select  
         sum(sal) total, 
         sum(decode(deptno, 10, sal)) d10,
         sum(decode(deptno, 20, sal)) d20,
         sum(decode(deptno, 30, sal)) d30
  from emp;

  select job, 
         nvl(sum(sal), 0) total, 
         nvl(sum(decode(deptno, 10, sal)), 0) d10,
         nvl(sum(decode(deptno, 20, sal)), 0) d20,
         nvl(sum(decode(deptno, 30, sal)), 0) d30
  from emp
  group by job
  order by job;

========================
 5장 복수행 함수
========================

# 집단별 집계

  select sum(sal), avg(sal)
  from emp;

  select deptno, sum(sal), avg(sal)
  from emp
  group by deptno
  order by deptno;

  select deptno, job, sum(sal), avg(sal)
  from emp
  group by deptno, job
  order by deptno, job;

  select /* 가공한 결과에 의한 Group by */
         to_char(hiredate, 'yyyy') as year, avg(sal)
  from emp
  group by to_char(hiredate, 'yyyy')
  order by year;

    --

  select empno, 
         sal, 
         case when sal < 2000 then '1'
              when sal < 4000 then '2'
              else                 '3'
         end as gubun
  from emp
  order by gubun, sal;
  
  select case when sal < 2000 then '1 : < 2000'
              when sal < 4000 then '2 : < 4000'
              else                 '3 : >= 4000'
         end as gubun,
         count(*),
         sum(sal),
         avg(sal)
  from emp
  group by case when sal < 2000 then '1 : < 2000'
                when sal < 4000 then '2 : < 4000'
                else                 '3 : >= 4000'
           end
  order by gubun;

# 에러 대처

  - 복수행 함수로 감싼 컬럼 이외의 모든 컬럼은 
    group by절에 나타나야 한다. 단, 리터럴은 예외

  select sum(sal)
  from emp;

  select sum(sal)
  from emp
  group by deptno;

  select deptno, sum(sal)   -- 에러
  from emp;

  select deptno, sum(sal)
  from emp
  group by deptno;

  select deptno, sum(sal)
  from emp
  group by deptno, job;

# where vs having

  select deptno, sum(sal)
  from emp
  where deptno != 20
  group by deptno;

  select deptno, sum(sal)
  from emp
  group by deptno
  having deptno != 20;

    --

  select deptno, sum(sal)
  from emp
  where sum(sal) < 10000   /* 에러 */
  group by deptno;

  select deptno, sum(sal)
  from emp  
  group by deptno
  having sum(sal) < 10000;

# 5-5

  select avg(all sal), avg(distinct sal)
  from emp;

# 5-6

  - 모든 복수행 함수는 null을 무시합니다. 단, count(*)는 예외

  select sum(comm), avg(comm)
  from emp;
 
    --

  select comm, 
         nvl(comm, 0)
  from emp;

  select avg(comm) a,         /* 커미션 받는 사원들의 평균 커미션 */
         avg(nvl(comm, 0)) b  /* 사원 1인당 평균 커미션 */
  from emp;

    --

  drop table t1 purge;

  create table t1 (col1 number);

  insert into t1 values (1000);
  insert into t1 values (1000);
  insert into t1 values (2000);
  insert into t1 values (2000);
  insert into t1 values (null);
  insert into t1 values ('');
 
  commit;

  select count(*), count(col1), count(distinct col1)
  from t1;

========================
 6장 조인
========================

# Join

  * 용어

    select *
    from emp e, dept d            -- Join Statement
    where e.deptno = d.deptno     -- Join Predicate
    and e.sal >= 1000             -- Non-Join Predicate
    and e.job = 'MANAGER'         -- Non-Join Predicate
    and d.deptno = 10             -- Non-Join Predicate(Single-Row Predicate)
    order by 1;

  * Syntax

    [1] Oracle Syntax 

        - Equi join
        - NonEqui join
        - Self join
        - Outer join

    [2] SQL:1999 Syntax

        - Cross join
        - Natural join
        - Join Using
        - Join On
        - Outer join

  * 조인은 곱셈 연산이다!

    select count(*)
    from (select level as no from dual connect by level <= 100),
         (select level as no from dual connect by level <= 100),
         (select level as no from dual connect by level <= 100);

# Join >> Oracle Syntax 

 (1) Equi join

  select *
  from emp, dept
  order by 1;

  select *
  from emp e, dept d
  where e.deptno = d.deptno
  order by 1;

 (2) NonEqui join

  select *
  from emp, salgrade
  order by 1;

  select *
  from emp e, salgrade s
  where e.sal >= s.losal and e.sal <= s.hisal
  order by 1;

  select s.grade, count(*), avg(e.sal)
  from emp e, salgrade s
  where e.sal >= s.losal and e.sal <= s.hisal
  group by s.grade
  order by grade desc;

 (3) Self join
  
  select *
  from emp w, emp m
  order by 1;

  select *
  from emp w, emp m
  where w.mgr = m.empno
  order by 1;

  select w.empno, w.ename, m.empno, m.ename
  from emp w, emp m
  where w.mgr = m.empno
  order by 1;

  # 문제.ALLEN 보다 SAL이 많은 사원?

    select *
    from emp e, emp a;
 
    select *
    from emp e, emp a
    where a.empno = 7499;

    select *
    from emp e, emp a
    where a.empno = 7499
    and e.sal > a.sal;

    select e.empno, 
           e.sal, 
           a.empno, 
           a.sal, 
           e.sal - a.sal as diff
    from emp e, emp a
    where a.empno = 7499
    and e.sal > a.sal
    order by diff desc;

  cf.상호 관련 서브쿼리로 해결

     select empno, ename, mgr, (select ename from emp where empno = e.mgr) as ename
     from emp e; 

 (4) Outer join

  select *
  from emp w, emp m
  where w.mgr = m.empno (+)
  order by 1;

  문제.누적합 구하기

           A          B      누적
    -------- ---------- ---------
        7369        800       800
        7499       1600      2400
        7521       1250      3650

    drop table t1;

    create table t1 
    as 
    select empno c1, sal c2
    from emp
    where rownum <= 3;

    select *
    from t1;

    select *
    from t1 a, t1 b;

    select *
    from t1 a, t1 b
    where a.c1 >= b.c1
    order by 1, 2;

    select a.c1, a.c2, sum(b.c2) as cumulative
    from t1 a, t1 b
    where a.c1 >= b.c1
    group by a.c1, a.c2
    order by 1, 2;

# Join >> SQL:1999 Syntax 

 (1) Cross join

     select *
     from emp CROSS JOIN dept;

 (2) Natural join

     select *
     from emp e NATURAL JOIN dept d;

     select *
     from emp e NATURAL JOIN dept d
     where e.job = 'MANAGER';

     ==> Natural join의 문제 : 같은 이름의 컬럼이 모두 조인 조건에 사용된다!

         select *
         from employees e NATURAL JOIN departments d;

        (3) Natural join의 문제 해결 방법 1 : Join Using

            select *
            from employees e JOIN departments d USING (department_id);

        (4)  Natural join의 문제 해결 방법 2 : Join On

            select *
            from employees e JOIN departments d ON (e.department_id = d.department_id);

 (5) Outer join

     select *
     from employees e, departments d
     where e.department_id = d.department_id (+);

     select *
     from employees e LEFT OUTER JOIN departments d ON (e.department_id = d.department_id);

        ---

     select *
     from employees e, departments d
     where e.department_id (+) = d.department_id

     select *
     from employees e RIGHT OUTER JOIN departments d ON (e.department_id = d.department_id);

        ---

     select * 
     from employees e, departments d
     where e.department_id (+) = d.department_id (+);  -- 에러

     select *
     from employees e FULL OUTER JOIN departments d ON (e.department_id = d.department_id);

# Oracle Syntax vs SQL:1999 Syntax

  select *
  from emp e, dept d
  where e.deptno = d.deptno;

  => select *
     from emp e NATURAL JOIN dept d;

  => select *
     from emp e JOIN dept d USING (deptno);

  => select *
     from emp e JOIN dept d ON (e.deptno = d.deptno);

   ---

  select *
  from emp e, salgrade s
  where e.sal >= s.losal and e.sal <= s.hisal;

  => select *
     from emp e JOIN salgrade s ON (e.sal >= s.losal and e.sal <= s.hisal);

   ---

  select *
  from emp w, emp m
  where w.mgr = m.empno;

  => select *
     from emp w JOIN emp m ON (w.mgr = m.empno);

# Note. Cartesian Product는 항상 나쁘다??!!

  select deptno, job, sum(sal)
  from emp
  group by deptno, job
  union all
  select deptno, null, sum(sal)
  from emp
  group by deptno
  union all
  select null, null, sum(sal)
  from emp
  order by 1, 2;

     ---

  select *
  from (select deptno, job, sum(sal) as sum_sal
        from emp
        group by deptno, job) e,
       (select level as no
        from dual
        connect by level <= 3) n
  order by n.no;

  select decode(n.no, 1, deptno, 2, deptno) as deptno,
         job, 
         sum_sal,
         no
  from (select deptno, job, sum(sal) as sum_sal
        from emp
        group by deptno, job) e,
       (select level as no
        from dual
        connect by level <= 3) n
  order by n.no;

  select decode(n.no, 1, deptno, 2, deptno) as deptno,
         decode(n.no, 1, job) as job,
         sum_sal,
         no
  from (select deptno, job, sum(sal) as sum_sal
        from emp
        group by deptno, job) e,
       (select level as no
        from dual
        connect by level <= 3) n
  order by n.no;

  select decode(n.no, 1, deptno, 2, deptno) as deptno,
         decode(n.no, 1, job) as job,
         sum(sum_sal)
  from (select deptno, job, sum(sal) as sum_sal
        from emp
        group by deptno, job) e,
       (select level as no
        from dual
        connect by level <= 3) n
  group by decode(n.no, 1, deptno, 2, deptno),
           decode(n.no, 1, job)
  order by 1, 2;

  select decode(n.no, 1, deptno, 2, deptno) as deptno,
         decode(n.no, 1, job) as job,
         sum(sum_sal)
  from (select deptno, job, sum(sal) as sum_sal
        from emp
        group by deptno, job) e
        CROSS JOIN
       (select level as no
        from dual
        connect by level <= 3) n
  group by decode(n.no, 1, deptno, 2, deptno),
           decode(n.no, 1, job)
  order by 1, 2;


     ---

  select deptno, job, sum(sal)
  from emp
  group by rollup(deptno, job);

========================
 7장 서브쿼리
========================

========================
 8장 Set 연산자
========================
